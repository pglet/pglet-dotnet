
environment:
  configuration: Release
  psg_api_key: 
    secure: e3uoVHqaTTa+BqEphKfjGYLXG4OXTmAktNhbWXAD+ZT6BD94F0dqabjfwbcKk14t

build_script:
- ps: |
    $ErrorActionPreference = "Stop"

    if ($env:APPVEYOR_REPO_TAG -eq 'true') {

      Write-Host "Publishing module to PowerShell Gallery..."

      # version
      $ver = $env:APPVEYOR_REPO_TAG_NAME
      if ($ver.StartsWith('v')) { $ver = $ver.Substring(1) }

      # version suffix
      $idx = $ver.indexOf('-')
      if ($idx -ne -1) {
        $ver_suffix = $ver.Substring($idx + 1)
        $ver = $ver.Substring(0, $idx)
      }
    } else {
      $ver = $env:APPVEYOR_BUILD_VERSION
      $ver_suffix = ''
    }

    Write-Host "Module version: $ver"
    Write-Host "Version suffix: $ver_suffix"

    dotnet build src\Pglet --configuration $env:CONFIGURATION /p:Version=$ver /p:VersionSuffix=$ver_suffix
    dotnet build src\Pglet.PowerShell --configuration $env:CONFIGURATION /p:Version=$ver /p:VersionSuffix=$ver_suffix

    # copy module contents
    New-Item pglet -Type Directory | Out-Null
    Copy-Item -Path *.psd1 -Destination pglet
    Copy-Item -Path *.psm1 -Destination pglet
    Copy-Item -Path 'bin' -Destination pglet -Recurse
    Get-ChildItem pglet -Recurse

    # publish module
    if ($env:APPVEYOR_REPO_TAG -eq 'true') {
      (Get-Content pglet\pglet.psd1).replace("ModuleVersion     = '0.1.0'", "ModuleVersion = '$ver'") | Set-Content pglet\pglet.psd1
      if ($ver_suffix) {(Get-Content pglet\pglet.psd1).replace("# Prerelease = 'beta'", "Prerelease = '$ver_suffix'") | Set-Content pglet\pglet.psd1}
      Publish-Module -Path $env:APPVEYOR_BUILD_FOLDER\pglet -NuGetApiKey $env:psg_api_key

      Write-Host "Module has been successfully published" -ForegroundColor Green
    }

artifacts:
  - path: '**/*.nupkg'

test: off

image: Ubuntu

environment:
  configuration: Release
  PGLET_VERSION: 0.5.6
  nuget_api_key:
    secure: 7qhExxbMr9K4LxzMbhJ2YHynyvZde6y/6duaZuT1Vzyg6CfI9QHDJD2y8DWtGXSA

build_script:
# downloading binaries
- dotnet --version
- sh: |
    function download_binary() {
      echo "Downloading $1"
      mkdir -p runtimes/$2
      curl -L https://github.com/pglet/pglet/releases/download/v${PGLET_VERSION}/pglet-${PGLET_VERSION}-$1 -o runtimes/$2/pglet
      chmod +x runtimes/$2/pglet
    }

    echo "Downloading runtimes/win-x64"
    mkdir -p runtimes/win-x64
    curl -L https://github.com/pglet/pglet/releases/download/v${PGLET_VERSION}/pglet-${PGLET_VERSION}-windows-amd64.exe -o runtimes/win-x64/pglet-server.exe

    download_binary "linux-amd64" "linux-x64"
    download_binary "linux-arm64" "linux-arm64"
    download_binary "linux-arm" "linux-arm"
    download_binary "darwin-amd64" "osx-x64"
    download_binary "darwin-arm64" "osx-arm64"
- ps: |
    $ErrorActionPreference = "Stop"

    if ($env:APPVEYOR_REPO_TAG -eq 'true') {

      Write-Host "Publishing module to NuGet Gallery..."

      # version
      $ver = $env:APPVEYOR_REPO_TAG_NAME
      if ($ver.StartsWith('v')) { $ver = $ver.Substring(1) }

      # version suffix
      $idx = $ver.indexOf('-')
      if ($idx -ne -1) {
        $ver_suffix = $ver.Substring($idx + 1)
        $ver_num = $ver.Substring(0, $idx)
      } else {
        $ver_suffix = ''
        $ver_num = $ver
      }
    } else {
      $ver = $ver_num = $env:APPVEYOR_BUILD_VERSION
      $ver_suffix = ''
    }

    Write-Host "Module version: $ver"
    Write-Host "Version suffix: $ver_suffix"

    dotnet build src\Pglet --configuration $env:CONFIGURATION /p:Version=$ver

artifacts:
  - path: '**/*.nupkg'

test: off

deploy:
  - provider: NuGet
    api_key: $(nuget_api_key)
    on:
      APPVEYOR_REPO_TAG: true